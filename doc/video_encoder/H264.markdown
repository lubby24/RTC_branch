# 一、概述

- 压缩：
  帧内预测压缩、帧间预测压缩（运动估计与补偿）、整数离散余弦变换（DCT）
- 结构：
  GOP->帧->片（slice）->宏块（MB）[h264编码的基本单位]->yuv数据（16x16）
- 组成：
  I帧、P帧、B帧
- **I帧和IDR帧的区别：
  **一个GOP帧序列的第一个帧是IDR帧（立即刷新图像），**IDR帧都是I帧。I帧不一定是IDR帧**
  H264引入IDR是为了解码的重同步，当解码器解码到IDR时，立即将参考帧队列清空，将已解码的数据全部输出或抛弃，重新查找参数集，开始新的GOP序列。
  对于 IDR 帧来说，在 IDR 帧之后的所有帧都不能引用任何 IDR 帧之前的帧的内容，与此相反，对于普通的 I 帧来说，位于其之后的 B-帧和 P 帧可以引用位于普通 I 帧之前的 I 帧。
- **GOP图像组
  **一个序列就是一段内容差异不太大的图像编码后生成的一串数据流。当运动变化比较少时，一个序列可以很长，因为运动变化少就代表图像画面的内容变动很小，所以就可以编一个 I 帧，然后一直 P 帧、B 帧了。当运动变化多时，可能一个序列就比较短了，比如就包含一个 I 帧和 3、4个P帧。
  GOP一般有两个数字，如M=3，N=12。M指定I帧与P帧之间的距离，N指定两个I帧之间的距离。
- I帧特点：
  I帧描述了图像背景和运动主体的详情
  I帧不需要考虑运动矢量;
- P帧特点：
  由于P帧是参考帧,它可能造成解码错误的扩散;
  B帧特点：
  在实时互动的环境下，过多的B帧会引起延时，因为B帧会过分的依赖于前后帧，在网络不好的时候，B帧会等待其他帧到来，会引起延时。
- **花屏和卡顿
  **如果在GOP分组中的P帧丢失，会造成解码端的图像发生错误。这就是**花屏
  **为了解决花屏的问题发生，我们可以将丢失 P帧 或是 I帧 的 GOP 丢掉（包含其中的所有帧），直到下一个I帧再重新刷新图像。但是由于这一帧丢掉了，所以会出现**卡顿*。

# 二、压缩

帧内压缩（Intraframe）生成I帧，帧间压缩（Interframe）

1. 分组，也就是将一系列变换不大的图像归为一个组，也就是一个序列，也可以叫GOP（画面组）；
   ->划分宏块
   ->划分子块
   ->帧分组（在相邻几幅图像画面中，一般有差别的像素只有10%以内的点,亮度差值变化不超过2%，而色度差值的变化只有1%以内，我们认为这样的图可以分到一组。）
   ->运动估计与补偿【帧间预测降冗余】
2. 定义帧，将每组的图像帧归分为I帧、P帧和B帧三种类型；
3. 预测帧， 以I帧做为基础帧,以I帧预测P帧,再由I帧和P帧预测B帧;
4. 数据传输， 最后将I帧数据与预测的差值信息进行存储和传输。

# 三、H264分层结构

264的主要目标是为了有高的视频压缩比和良好的网络亲和性

H.264原始码流(裸流)是由一个接一个NALU组成，它的功能分为两层，VCL(视频编码层)和NAL(网络抽象层).

VCL：包括核心压缩引擎和块，宏块和片的语法级别定义，设计目标是尽可能地独立于网络进行高效的编码；

NAL：负责将VCL产生的比特字符串适配到各种各样的网络和多元环境中，覆盖了所有片级以上的语法级别。

因为H264最终还是要在网络上进行传输，在传输的时候，网络包的最大传输单元是1500字节，一个H264的帧往往是大于1500字节的，所以需要将一个帧拆成多个包进行传输。这些拆包、组包等工作都在NAL层去处理。

# 四、H264码流结构

在VCL进行数据传输或存储之前，这些编码的VCL数据，被映射或封装进NAL单元（NALU）。

H264码流是由一个个的NAL单元组成，其中SPS、PPS、IDR和SLICE是NAL单元某一类型的数据。

H264的NAL单元

一个NALU = 一组对应于视频编码的NALU头部信息 + 一个原始字节序列负荷(RBSP,Raw Byte Sequence Payload).

如图所示，下图中的NALU的头 + RBSP 就相当于一个NALU(Nal Unit),每个单元都按独立的NALU传送。H.264的结构全部都是以NALU为主，理解了NALU，就理解了H.264的结构。

一个原始的H.264 NALU 单元常由 [StartCode] [NALU Header] [NALU Payload] 三部分组成，其中 Start Code 用于标示这是一个NALU 单元的开始，必须是”00 00 00 01” 或”00 00 01”

3字节的0x000001只有一种场合下使用，就是一个完整的帧被编为多个slice的时候，包含这些slice的nalu使用3字节起始码。其余场合都是4字节的。【？】

NAL Header

NAL单元的头部是由forbidden_bit(1bit)，nal_reference_bit(2bits)（优先级），nal_unit_type(5bits)（类型）三个部分组成的。

1、F(forbiden):禁止位，占用NAL头的第一个位，当禁止位值为1时表示语法错误；

2、NRI:参考级别，占用NAL头的第二到第三个位；值越大，该NAL越重要。

3、Type:Nal单元数据类型，也就是标识该NAL单元的数据类型是哪种，占用NAL头的第四到第8个位；

举例来说：

00 00 00 01 06: SEI信息

00 00 00 01 67: 0x67&0x1f = 0x07 :SPS

00 00 00 01 68: 0x68&0x1f = 0x08 :PPS

00 00 00 01 65: 0x65&0x1f = 0x05: IDR Slice

非VCL的NAL数据类型：
1）、SPS（序列参数集）：SPS对如标识符、帧数以及参考帧数目、解码图像尺寸和帧场模式等解码参数进行标识记录。

2）、PPS（图像参数集）：PPS对如熵编码类型、有效参考图像的数目和初始化等解码参数进行标志记录。

3）、SEI(补充增强信息)：这部分参数可作为H264的比特流数据而被传输，每一个SEI信息被封装成一个NAL单元。SEI对于解码器来说可能是有用的，但是对于基本的解码过程来说，并不是必须的。

VCL的NAL数据类型：

1）、 头信息块，包括宏块类型，量化参数，运动矢量。这些信息是最重要的，因为离开他们，被的数据块种的码元都无法使用。该数据分块称为A类数据分块。

2）、 帧内编码信息数据块，称为B类数据分块。它包含帧内编码宏块类型，帧内编码系数。对应的slice来说，B类数据分块的可用性依赖于A类数据分块。和帧间编码信息数据块不通的是，帧内编码信息能防止进一步的偏差，因此比帧间编码信息更重要。

3）、 帧间编码信息数据块，称为C类数据分块。它包含帧间编码宏块类型，帧间编码系数。它通常是slice种最大的一部分。帧间编码信息数据块是不重要的一部分。它所包含的信息并不提供编解码器之间的同步。C类数据分块的可用性也依赖于A类数据分块，但于B类数据分块无关。